---
- name: create Prometheus group
  group: name={{ prometheus_exporters_common_group }}  state=present

- name: create Prometheus Workign user and group
  user:
    name: "{{ prometheus_exporters_common_user }}"
    group: "{{ prometheus_exporters_common_group }}"
    createhome: no
    shell: /sbin/nologin
    comment: "Prometheus User"
    state: present

- name: mkdir for general cases
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_exporters_common_user }}"
    group: "{{ prometheus_exporters_common_group }}"
    mode: "u=rwx,g=rx,o="
  with_items:
    - "{{ prometheus_config_path }}"

- name: create Prometheus root dir in "{{ prometheus_install_path }}"
  file:
    path: "{{ prometheus_install_path }}"
    state: directory
    mode: 0755
- name: create Node_expoter config dir in "/etc/sysconfig"
  file:
    path: /etc/sysconfig
    state: directory
    mode: 0755

- name: create Prometheus Generic exporter tar.gz archive in "{{ generic_exporter_compressed_binary_path }}"
  file:
    path: "{{ generic_exporter_compressed_binary_path }}"
    state: directory
    mode: 0755

- name: create Node Expoter tar.gz archive in "{{ node_exporter_compressed_binary_path }}"
  file:
    path: "{{ node_exporter_compressed_binary_path }}"
    state: directory
    mode: 0755

- name: create general exporter binary file dir "{{ generic_exporter_binary_path }}"
  file:
    path: "{{ generic_exporter_binary_path }}"
    state: directory
    mode: 0755

- name: create Node Expoter binary file "{{ node_exporter_path }}"
  file:
    path: "{{ node_exporter_path }}"
    state: directory
    mode: 0755


- name: download prometheus node exporter binary
  get_url:
    url: "{{ url }}"
    dest: "{{ node_exporter_compressed_binary_path }}/{{ prometheus_node_exporter_release_name }}.tar.gz"

- name: unarchive binary tarball
  unarchive:
    copy: no
    src: "{{ node_exporter_compressed_binary_path }}/{{ prometheus_node_exporter_release_name }}.tar.gz"
    dest: "{{ node_exporter_path }}"
    creates: "{{ node_exporter_path }}/{{ prometheus_node_exporter_release_name }}"
  register: prometheus_node_exporter_updated
  notify:
    - restart node exporter

- name: update group and owner for files
  file:
    path: "{{ node_exporter_path }}"
    state: directory
    recurse: yes
    owner: "{{ prometheus_exporters_common_user}}"
    group: "{{ prometheus_exporters_common_group }}"
  when: prometheus_node_exporter_updated | changed

- name: create symlink to the current release
  file:
    src: "{{ node_exporter_path }}/{{ prometheus_node_exporter_release_name }}"
    path: "{{ prometheus_exporters_common_root_dir }}/node_exporter_current"
    state: link


- name: create node_expoter sysconfig
  template:
    src: etc/sysconfig/node_expoter
    dest: /etc/sysconfig/node_exporter
    owner: root
    group: root
    mode: 0644
  when: ansible_service_mgr == 'systemd'
  notify:
    - reenable node exporter service
    - restart node exporter

- name: create systemd service unit
  template:
    src: etc/systemd/system/prometheus-node-exporter.service.j2
    dest: /etc/systemd/system/prometheus-node-exporter.service
    owner: root
    group: root
    mode: 0644
  when: ansible_service_mgr == 'systemd'
  notify:
    - reenable node exporter service
    - restart node exporter

- name: Looking which version of upstart is install
  command: initctl version
  when: ansible_service_mgr == 'upstart'
  register: upstart_version

- name: create init service unit
  template:
    src: etc/init/prometheus-node-exporter.conf.j2
    dest: /etc/init/prometheus-node-exporter.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_service_mgr == 'upstart'
  notify:
    - reinit node exporter
    - restart node exporter

- name: create sysvinit service unit
  template:
    src: etc/init.d/prometheus-node-exporter.j2
    dest: /etc/init.d/prometheus-node-exporter
    owner: root
    group: root
    mode: 0755
  when: ansible_service_mgr == 'sysvinit'
  notify:
    - restart node exporter

- meta: flush_handlers

- name: ensure prometheus node exporter service is enabled and started
  service:
    name: prometheus-node-exporter
    state: started
    enabled: yes
